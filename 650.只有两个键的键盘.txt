最初在一个记事本上只有一个字符 'A'。你每次可以对这个记事本进行两种操作：

Copy All (复制全部) : 你可以复制这个记事本中的所有字符(部分的复制是不允许的)。
Paste (粘贴) : 你可以粘贴你上一次复制的字符。
给定一个数字 n 。你需要使用最少的操作次数，在记事本中打印出恰好 n 个 'A'。输出能够打印出 n 个 'A' 的最少操作次数。

示例 1:

输入: 3
输出: 3
解释:
最初, 我们只有一个字符 'A'。
第 1 步, 我们使用 Copy All 操作。
第 2 步, 我们使用 Paste 操作来获得 'AA'。
第 3 步, 我们使用 Paste 操作来获得 'AAA'。
自己题解：
class Solution {
    public int minSteps(int n) {
       if(n==1){
            return 0;
        }
        if(n==2 || n==3 || n==5 || n==7 || n==11 || n==13){
            return n;
        }
        int result = 0;
        while(n>5){
            if(n%2==0){
                result+=2;n/=2;
            }else if(n%3==0){
                result+=3;n/=3;
            }else if(n%5==0){
                result+=5;n/=5;
            }else if(n%7==0){
                result+=7;n/=7;
            }else if(n%11==0){
                result+=11;n/=11;
            }else if(n%13==0){
                result+=13;n/=13;
            }else if(n%23==0){
                result+=23;n/=23;
            }
            else{
                return result+n;
            }
        }
        return result+((n==1)?0:n);
    }
}

大佬题解:
n>1时 其实就是将n分解为m个数字的乘积 且m个数字的和最小 即把一个数分解为n个质数的和 从小到大的去试探

public int minSteps(int n) {
        int res = 0;
        for (int i = 2; i <= n; i++) {
            while (n % i == 0) {
                res += i;
                n /= i;
            }
        }
        return res;
    }