class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        if(nums == null || nums.length<3){
            return result;
        }
        Arrays.sort(nums);
        int i = 0;
        while(i<nums.length-2){
            int base = i;
            int left = i+1;
            int right = nums.length-1;
            while(left<right){
                int sum = nums[base]+nums[left]+nums[right];
                if(sum == 0){
                    List<Integer> list = new ArrayList<>();
                    list.add(nums[i]);
                    list.add(nums[left]);
                    list.add(nums[right]);
                    result.add(list);
                    left = moveRight(nums,left+1);
                    right = moveLeft(nums,right-1);
                }else if(sum < 0){
                    left = moveRight(nums,left+1);
                }else{
                    right = moveLeft(nums,right-1);
                }
            }
            i = moveRight(nums,i+1);
        }
        return result;
    }
    
    public int moveLeft(int[] nums,int num){
        while(num == nums.length-1 || (num>=0 && nums[num] == nums[num+1])){
            num--;
        }
        return num;
    }

    public int moveRight(int[] nums,int num){
        while(num == 0 || (num<=nums.length-1 && nums[num] == nums[num-1])){
            num++;
        }
        return num;
    }
}