/**

机器人跳跃问题
机器人正在玩一个古老的基于DOS的游戏。游戏中有N+1座建筑――从0到N编号，从左到右排列。保证编号为0的建筑高度为0个单位。编号为i的建筑 (i∈[1,N])的高度为hi个单位。 
起初， 机器人在编号为0的建筑处。每一步，它跳到下一个（右边）建筑。假设机器人在第k个建筑，且他现在的能量值是E, 下一步他将跳到第(k+1)个建筑。他将会得到或者失去正比于hk+1与E之差的能量。


算法思路：使用从后到前的逆序思想。假设刚好到达最后一个建筑物，则最后E的值为0
设前一个的能量为x,当前能量为e,当前高度为a[i]那么有     x-(a[i]-x)=e  =>  x = (e+a[i])/2向上取整。
所以最后结果为从后往前遍历，最后e的值。
**/
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int N = in.nextInt();
        int[] a = new int[N];
        for(int i = 0;i<N;i++){
            a[i]=in.nextInt();
        }
        System.out.println(fun(a));

    }
    public static int fun(int[] a){
        int sum = 0;
        for(int i = a.length-1;i>=0;i--){
            if((sum+a[i])%2==0)
                sum = (sum+a[i])/2;
            else{
                sum = (sum+a[i])/2+1;
            }
        }
        return sum;
    }
}
